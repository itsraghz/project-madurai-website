<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>An introduction on Project Madurai School</title>
    <link>/books/javascript/introduction/</link>
    <description>Recent content in An introduction on Project Madurai School</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Nov 2018 19:02:50 -0700</lastBuildDate><atom:link href="/books/javascript/introduction/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>An Introduction to JavaScript</title>
      <link>/books/javascript/introduction/javascript-intro/</link>
      <pubDate>Wed, 14 Nov 2018 19:02:50 -0700</pubDate>
      
      <guid>/books/javascript/introduction/javascript-intro/</guid>
      <description>An Introduction to JavaScript Let&amp;rsquo;s see what&amp;rsquo;s so special about JavaScript, what we can achieve with it, and what other technologies play well with it.
What is JavaScript? JavaScript was initially created to &amp;ldquo;make web pages alive&amp;rdquo;.
The programs in this language are called scripts. They can be written right in a web page&amp;rsquo;s HTML and run automatically as the page loads.
Scripts are provided and executed as plain text. They don&amp;rsquo;t need special preparation or compilation to run.</description>
    </item>
    
    <item>
      <title>Manuals and specifications</title>
      <link>/books/javascript/introduction/manuals-and-specifications/</link>
      <pubDate>Wed, 14 Nov 2018 19:02:50 -0700</pubDate>
      
      <guid>/books/javascript/introduction/manuals-and-specifications/</guid>
      <description>Manuals and specifications This book is a tutorial. It aims to help you gradually learn the language. But once you&amp;rsquo;re familiar with the basics, you&amp;rsquo;ll need other sources.
Specification The ECMA-262 specification contains the most in-depth, detailed and formalized information about JavaScript. It defines the language.
But being that formalized, it&amp;rsquo;s difficult to understand at first. So if you need the most trustworthy source of information about the language details, the specification is the right place.</description>
    </item>
    
    <item>
      <title>Code editors</title>
      <link>/books/javascript/introduction/code-editors/</link>
      <pubDate>Wed, 14 Nov 2018 19:02:50 -0700</pubDate>
      
      <guid>/books/javascript/introduction/code-editors/</guid>
      <description>Code editors A code editor is the place where programmers spend most of their time.
There are two main types of code editors: IDEs and lightweight editors. Many people use one tool of each type.
IDE The term IDE (Integrated Development Environment) refers to a powerful editor with many features that usually operates on a &amp;ldquo;whole project.&amp;rdquo; As the name suggests, it&amp;rsquo;s not just an editor, but a full-scale &amp;ldquo;development environment.</description>
    </item>
    
    <item>
      <title>Developer console</title>
      <link>/books/javascript/introduction/devtools/</link>
      <pubDate>Wed, 14 Nov 2018 19:02:50 -0700</pubDate>
      
      <guid>/books/javascript/introduction/devtools/</guid>
      <description>Developer console Code is prone to errors. You will quite likely make errors&amp;hellip; Oh, what am I talking about? You are absolutely going to make errors, at least if you&amp;rsquo;re a human, not a robot.
But in the browser, users don&amp;rsquo;t see errors by default. So, if something goes wrong in the script, we won&amp;rsquo;t see what&amp;rsquo;s broken and can&amp;rsquo;t fix it.
To see errors and get a lot of other useful information about scripts, &amp;ldquo;developer tools&amp;rdquo; have been embedded in browsers.</description>
    </item>
    
  </channel>
</rss>
